import os
import numpy as np

class PATH:
    CURRENT   = os.path.dirname(os.path.realpath(__file__))
    COURSERA  = os.path.join(CURRENT, '..\..\..\_coursera\\notebooks\\readonly')
    STORE     = os.path.join(CURRENT, '..\..\..\_store')

    @staticmethod
    def COURSERA_FILE(fn, dir):
        fpath = os.path.join(dir, fn)
        return os.path.join(PATH.COURSERA, fpath)

    @staticmethod
    def STORE_FILE(fn):
        return os.path.join(PATH.STORE, fn)


class PRINT:
    @staticmethod
    def HEADER(text, len=80, begin_line=True, end_line=True):
        template = '{:*^'+str(len)+'}'
        if begin_line: template = '\n'+template
        if end_line:   template = template + '\n'
        print('\n{0}{1}{0}\n'.format('*'*len, template.format(' '+text+' ')))


class DATA:
    class dp:
        def __init__(self, mean, cov, size, c):
            self.mean = mean
            self.cov = cov
            self.size = size
            self.c = c

    @staticmethod
    def IRIS_2D():
       return DATA.IRIS()[:, [0, 2, 4]];

    @staticmethod
    def IRIS():
        return np.array([[5.1,	3.5,	1.4,	0.2,	1],
                         [4.9,	3.0,	1.4,	0.2,	1],
                         [4.7,	3.2,	1.3,	0.2,	1],
                         [4.6,	3.1,	1.5,	0.2,	1],
                         [5.0,	3.6,	1.4,	0.3,	1],
                         [5.4,	3.9,	1.7,	0.4,	1],
                         [4.6,	3.4,	1.4,	0.3,	1],
                         [5.0,	3.4,	1.5,	0.2,	1],
                         [4.4,	2.9,	1.4,	0.2,	1],
                         [4.9,	3.1,	1.5,	0.1,	1],
                         [5.4,	3.7,	1.5,	0.2,	1],
                         [4.8,	3.4,	1.6,	0.2,	1],
                         [4.8,	3.0,	1.4,	0.1,	1],
                         [4.3,	3.0,	1.1,	0.1,	1],
                         [5.8,	4.0,	1.2,	0.2,	1],
                         [5.7,	4.4,	1.5,	0.4,	1],
                         [5.4,	3.9,	1.3,	0.4,	1],
                         [5.1,	3.5,	1.4,	0.3,	1],
                         [5.7,	3.8,	1.7,	0.3,	1],
                         [5.1,	3.8,	1.5,	0.3,	1],
                         [5.4,	3.4,	1.7,	0.2,	1],
                         [5.1,	3.7,	1.5,	0.4,	1],
                         [4.6,	3.6,	1.0,	0.2,	1],
                         [5.1,	3.3,	1.7,	0.5,	1],
                         [4.8,	3.4,	1.9,	0.2,	1],
                         [5.0,	3.0,	1.6,	0.2,	1],
                         [5.0,	3.4,	1.6,	0.4,	1],
                         [5.2,	3.5,	1.5,	0.2,	1],
                         [5.2,	3.4,	1.4,	0.2,	1],
                         [4.7,	3.2,	1.6,	0.2,	1],
                         [4.8,	3.1,	1.6,	0.2,	1],
                         [5.4,	3.4,	1.5,	0.4,	1],
                         [5.2,	4.1,	1.5,	0.1,	1],
                         [5.5,	4.2,	1.4,	0.2,	1],
                         [4.9,	3.1,	1.5,	0.2,	1],
                         [5.0,	3.2,	1.2,	0.2,	1],
                         [5.5,	3.5,	1.3,	0.2,	1],
                         [4.9,	3.6,	1.4,	0.1,	1],
                         [4.4,	3.0,	1.3,	0.2,	1],
                         [5.1,	3.4,	1.5,	0.2,	1],
                         [5.0,	3.5,	1.3,	0.3,	1],
                         [4.5,	2.3,	1.3,	0.3,	1],
                         [4.4,	3.2,	1.3,	0.2,	1],
                         [5.0,	3.5,	1.6,	0.6,	1],
                         [5.1,	3.8,	1.9,	0.4,	1],
                         [4.8,	3.0,	1.4,	0.3,	1],
                         [5.1,	3.8,	1.6,	0.2,	1],
                         [4.6,	3.2,	1.4,	0.2,	1],
                         [5.3,	3.7,	1.5,	0.2,	1],
                         [5.0,	3.3,	1.4,	0.2,	1],
                         [7.0,	3.2,	4.7,	1.4,	2],
                         [6.4,	3.2,	4.5,	1.5,	2],
                         [6.9,	3.1,	4.9,	1.5,	2],
                         [5.5,	2.3,	4.0,	1.3,	2],
                         [6.5,	2.8,	4.6,	1.5,	2],
                         [5.7,	2.8,	4.5,	1.3,	2],
                         [6.3,	3.3,	4.7,	1.6,	2],
                         [4.9,	2.4,	3.3,	1.0,	2],
                         [6.6,	2.9,	4.6,	1.3,	2],
                         [5.2,	2.7,	3.9,	1.4,	2],
                         [5.0,	2.0,	3.5,	1.0,	2],
                         [5.9,	3.0,	4.2,	1.5,	2],
                         [6.0,	2.2,	4.0,	1.0,	2],
                         [6.1,	2.9,	4.7,	1.4,	2],
                         [5.6,	2.9,	3.6,	1.3,	2],
                         [6.7,	3.1,	4.4,	1.4,	2],
                         [5.6,	3.0,	4.5,	1.5,	2],
                         [5.8,	2.7,	4.1,	1.0,	2],
                         [6.2,	2.2,	4.5,	1.5,	2],
                         [5.6,	2.5,	3.9,	1.1,	2],
                         [5.9,	3.2,	4.8,	1.8,	2],
                         [6.1,	2.8,	4.0,	1.3,	2],
                         [6.3,	2.5,	4.9,	1.5,	2],
                         [6.1,	2.8,	4.7,	1.2,	2],
                         [6.4,	2.9,	4.3,	1.3,	2],
                         [6.6,	3.0,	4.4,	1.4,	2],
                         [6.8,	2.8,	4.8,	1.4,	2],
                         [6.7,	3.0,	5.0,	1.7,	2],
                         [6.0,	2.9,	4.5,	1.5,	2],
                         [5.7,	2.6,	3.5,	1.0,	2],
                         [5.5,	2.4,	3.8,	1.1,	2],
                         [5.5,	2.4,	3.7,	1.0,	2],
                         [5.8,	2.7,	3.9,	1.2,	2],
                         [6.0,	2.7,	5.1,	1.6,	2],
                         [5.4,	3.0,	4.5,	1.5,	2],
                         [6.0,	3.4,	4.5,	1.6,	2],
                         [6.7,	3.1,	4.7,	1.5,	2],
                         [6.3,	2.3,	4.4,	1.3,	2],
                         [5.6,	3.0,	4.1,	1.3,	2],
                         [5.5,	2.5,	4.0,	1.3,	2],
                         [5.5,	2.6,	4.4,	1.2,	2],
                         [6.1,	3.0,	4.6,	1.4,	2],
                         [5.8,	2.6,	4.0,	1.2,	2],
                         [5.0,	2.3,	3.3,	1.0,	2],
                         [5.6,	2.7,	4.2,	1.3,	2],
                         [5.7,	3.0,	4.2,	1.2,	2],
                         [5.7,	2.9,	4.2,	1.3,	2],
                         [6.2,	2.9,	4.3,	1.3,	2],
                         [5.1,	2.5,	3.0,	1.1,	2],
                         [5.7,	2.8,	4.1,	1.3,	2],
                         [6.3,	3.3,	6.0,	2.5,	3],
                         [5.8,	2.7,	5.1,	1.9,	3],
                         [7.1,	3.0,	5.9,	2.1,	3],
                         [6.3,	2.9,	5.6,	1.8,	3],
                         [6.5,	3.0,	5.8,	2.2,	3],
                         [7.6,	3.0,	6.6,	2.1,	3],
                         [4.9,	2.5,	4.5,	1.7,	3],
                         [7.3,	2.9,	6.3,	1.8,	3],
                         [6.7,	2.5,	5.8,	1.8,	3],
                         [7.2,	3.6,	6.1,	2.5,	3],
                         [6.5,	3.2,	5.1,	2.0,	3],
                         [6.4,	2.7,	5.3,	1.9,	3],
                         [6.8,	3.0,	5.5,	2.1,	3],
                         [5.7,	2.5,	5.0,	2.0,	3],
                         [5.8,	2.8,	5.1,	2.4,	3],
                         [6.4,	3.2,	5.3,	2.3,	3],
                         [6.5,	3.0,	5.5,	1.8,	3],
                         [7.7,	3.8,	6.7,	2.2,	3],
                         [7.7,	2.6,	6.9,	2.3,	3],
                         [6.0,	2.2,	5.0,	1.5,	3],
                         [6.9,	3.2,	5.7,	2.3,	3],
                         [5.6,	2.8,	4.9,	2.0,	3],
                         [7.7,	2.8,	6.7,	2.0,	3],
                         [6.3,	2.7,	4.9,	1.8,	3],
                         [6.7,	3.3,	5.7,	2.1,	3],
                         [7.2,	3.2,	6.0,	1.8,	3],
                         [6.2,	2.8,	4.8,	1.8,	3],
                         [6.1,	3.0,	4.9,	1.8,	3],
                         [6.4,	2.8,	5.6,	2.1,	3],
                         [7.2,	3.0,	5.8,	1.6,	3],
                         [7.4,	2.8,	6.1,	1.9,	3],
                         [7.9,	3.8,	6.4,	2.0,	3],
                         [6.4,	2.8,	5.6,	2.2,	3],
                         [6.3,	2.8,	5.1,	1.5,	3],
                         [6.1,	2.6,	5.6,	1.4,	3],
                         [7.7,	3.0,	6.1,	2.3,	3],
                         [6.3,	3.4,	5.6,	2.4,	3],
                         [6.4,	3.1,	5.5,	1.8,	3],
                         [6.0,	3.0,	4.8,	1.8,	3],
                         [6.9,	3.1,	5.4,	2.1,	3],
                         [6.7,	3.1,	5.6,	2.4,	3],
                         [6.9,	3.1,	5.1,	2.3,	3],
                         [5.8,	2.7,	5.1,	1.9,	3],
                         [6.8,	3.2,	5.9,	2.3,	3],
                         [6.7,	3.3,	5.7,	2.5,	3],
                         [6.7,	3.0,	5.2,	2.3,	3],
                         [6.3,	2.5,	5.0,	1.9,	3],
                         [6.5,	3.0,	5.2,	2.0,	3],
                         [6.2,	3.4,	5.4,	2.3,	3],
                         [5.9,	3.0,	5.1,	1.8,	3]
                         ]);

    @staticmethod
    def NORMAL(seed=84):
        np.random.seed(seed)

        data = [DATA.dp(mean=(0,0),    cov=[[3, 0], [0, 1.5]], size=(150), c=0),
                DATA.dp(mean=(-7,-2),  cov=[[5, 0], [0, 1]],   size=(150), c=0),
                DATA.dp(mean=(-13,-0), cov=[[1, 0], [0, 6]],   size=(150), c=0),
                DATA.dp(mean=(4,0),    cov=[[1, 0], [0, 3]],   size=(150), c=1),
                DATA.dp(mean=(0,4),    cov=[[3, 0], [0, 1]],   size=(150), c=1),
                DATA.dp(mean=(-8,4),   cov=[[3, 0], [0, 3]],   size=(150), c=1)]

        return DATA.__NORMAL(data)

    @staticmethod
    def NORMAL_1(seed=84):
        np.random.seed(seed)

        data = [DATA.dp(mean=(0,0),  cov=[[1, 0], [0, 1]], size=(150), c=0),
                DATA.dp(mean=(4,0),  cov=[[1, 0], [0, 1]], size=(100), c=1),
                DATA.dp(mean=(4,3),  cov=[[1, 0], [0, 1]], size=(100), c=1),
                DATA.dp(mean=(0,4),  cov=[[1, 0], [0, 1]], size=(100), c=1),
                DATA.dp(mean=(-4,3), cov=[[1, 0], [0, 1]], size=(100), c=1),
                DATA.dp(mean=(3,-4), cov=[[1, 0], [0, 1]], size=(100), c=1)]

        return DATA.__NORMAL(data)

    @staticmethod
    def NORMAL_3CLASSES(seed=84):
        np.random.seed(seed)

        data = [DATA.dp(mean=( 0, 0), cov=[[4, 0], [0, 1]], size=(50), c=0),
                DATA.dp(mean=( 4, 2), cov=[[1, 0], [0, 2]], size=(50), c=0),
                DATA.dp(mean=( 0, 4), cov=[[1, 0], [0, 2]], size=(50), c=1),
                DATA.dp(mean=( 2, 6), cov=[[2, 0], [0, 1]], size=(50), c=1),
                DATA.dp(mean=(-4, 6), cov=[[1, 0], [0, 8]], size=(50), c=2),
                DATA.dp(mean=(-1, 9), cov=[[1, 2], [2, 1]], size=(50), c=2),
                DATA.dp(mean=( 2,10), cov=[[4, 0], [0, 1]], size=(50), c=2),
                DATA.dp(mean=( 6,12), cov=[[1, -2], [-2, 1]], size=(50), c=2)]

        return DATA.__NORMAL(data)

    @staticmethod
    def __NORMAL(data):
        x = np.zeros(shape=(0, 3))
        for d in data:
          x_n = np.random.multivariate_normal(mean=d.mean, cov=d.cov, size=d.size)
          y_n = np.reshape([d.c]*x_n.shape[0], (-1, 1))
          x_n = np.concatenate((x_n, y_n), axis=1)
          x   = np.concatenate((x, x_n))

        return x

